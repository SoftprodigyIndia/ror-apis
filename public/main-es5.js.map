{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_components/alert.component.ts","webpack:///src/app/_components/alert.component.html","webpack:///src/app/_components/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/config.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/account/login.component.ts","webpack:///src/app/account/login.component.html","webpack:///src/app/account/register.component.ts","webpack:///src/app/account/register.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.init.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/services/constants.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/pagenotfound/pagenotfound.component.ts","webpack:///src/app/pagenotfound/pagenotfound.component.html","webpack:///src/app/side-nav-bar/side-nav-bar.component.ts","webpack:///src/app/users/add-edit.component.ts","webpack:///src/app/users/add-edit.component.html","webpack:///src/app/users/layout.component.ts","webpack:///src/app/users/layout.component.html","webpack:///src/app/users/list.component.ts","webpack:///src/app/users/list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","router","alertService","fade","alerts","alertSubscription","onAlert","subscribe","alert","message","filter","x","keepAfterRouteChange","forEach","push","autoClose","setTimeout","removeAlert","routeSubscription","events","event","clear","unsubscribe","includes","find","classes","alertTypeClass","Success","Info","Warning","type","join","selector","templateUrl","AuthGuard","accountService","route","state","token","localStorage","getItem","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","statusText","JwtInterceptor","constantService","appUrl","apiUrl","console","log","isApiUrl","startsWith","clone","setHeaders","Authorization","Alert","init","Object","assign","AlertType","Config","User","AccountService","http","configService","userSubject","user","asObservable","data","post","userDetail","updatedDataSelection","setItem","removeItem","get","params","put","value","AlertService","subject","defaultId","options","LoginComponent","formBuilder","loading","submitted","form","group","email","required","password","snapshot","invalid","login","controls","onSubmit","styleUrls","RegisterComponent","name","minLength","register","success","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","setUrl","config","ConfigService","toPromise","configFactory","loadConfig","AppModule","provide","useClass","multi","useFactory","deps","declarations","providers","bootstrap","ConstantsService","baseAppUrl","FooterComponent","HeaderComponent","toggleSideNav","logged","toggledState","emit","toggle","HomeComponent","getUser","PagenotfoundComponent","SideNavBarComponent","AddEditComponent","mySelect","roles","userRole","text","adminMode","isAddMode","passwordValidators","role","file","fileSource","image","getById","f","setValue","added_image","createUser","updateUser","relativeTo","undefined","uploadData","FormData","append","update_image","check_password_field","update","values","reader","FileReader","target","files","length","readAsDataURL","onload","imageSrc","result","LayoutComponent","toggledValue","setToggle","ListComponent","users","admin_id","getAll","isDeleting","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Alert, AlertType } from '@app/_models';\nimport { AlertService } from '@app/_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n    @Input() id = 'default-alert';\n    @Input() fade = true;\n\n    alerts: Alert[] = [];\n    alertSubscription: Subscription;\n    routeSubscription: Subscription;\n\n    constructor(private router: Router, private alertService: AlertService) { }\n\n    ngOnInit() {\n        // subscribe to new alert notifications\n        this.alertSubscription = this.alertService.onAlert(this.id)\n            .subscribe(alert => {\n                // clear alerts when an empty alert is received\n                if (!alert.message) {\n                    // filter out alerts without 'keepAfterRouteChange' flag\n                    this.alerts = this.alerts.filter(x => x.keepAfterRouteChange);\n\n                    // remove 'keepAfterRouteChange' flag on the rest\n                    this.alerts.forEach(x => delete x.keepAfterRouteChange);\n                    return;\n                }\n\n                // add alert to array\n                this.alerts.push(alert);\n\n                // auto close alert if required\n                if (alert.autoClose) {\n                    setTimeout(() => this.removeAlert(alert), 3000);\n                }\n           });\n\n        // clear alerts on location change\n        this.routeSubscription = this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.alertService.clear(this.id);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to avoid memory leaks\n        this.alertSubscription.unsubscribe();\n        this.routeSubscription.unsubscribe();\n    }\n\n    removeAlert(alert: Alert) {\n        // check if already removed to prevent error on auto close\n        if (!this.alerts.includes(alert)) return;\n\n        if (this.fade) {\n            // fade out alert\n            this.alerts.find(x => x === alert).fade = true;\n\n            // remove alert after faded out\n            setTimeout(() => {\n                this.alerts = this.alerts.filter(x => x !== alert);\n            }, 250);\n        } else {\n            // remove alert\n            this.alerts = this.alerts.filter(x => x !== alert);\n        }\n    }\n\n    cssClass(alert: Alert) {\n        if (!alert) return;\n\n        const classes = ['alert', 'alert-dismissable', 'mt-4', 'container'];\n                \n        const alertTypeClass = {\n            [AlertType.Success]: 'alert alert-success',\n            [AlertType.Error]: 'alert alert-danger',\n            [AlertType.Info]: 'alert alert-info',\n            [AlertType.Warning]: 'alert alert-warning'\n        }\n\n        classes.push(alertTypeClass[alert.type]);\n\n        if (alert.fade) {\n            classes.push('fade');\n        }\n\n        return classes.join(' ');\n    }\n}","<div *ngFor=\"let alert of alerts\" class=\"{{cssClass(alert)}}\">\n    <a class=\"close\" (click)=\"removeAlert(alert)\">&times;</a>\n    <span [innerHTML]=\"alert.message\"></span>\n</div>","export * from './alert.component';\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/secret'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n\n            const error = err.error[\"error\"][\"message\"] || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\nimport { ConstantsService } from '../common/services/constants.service';\n\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  apiUrl: string;\n\n    constructor(private accountService: AccountService, private constantService: ConstantsService)\n    {\n      this.constantService.appUrl.subscribe(url => {\n            this.apiUrl = url\n            console.log('JwtInterceptor', this.apiUrl);\n          });\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        // const user = this.accountService.userValue;\n        const token = localStorage.getItem(\"authToken\");\n        const isApiUrl = request.url.startsWith(this.apiUrl);\n        if (token && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","export class Alert {\n    id: string;\n    type: AlertType;\n    message: string;\n    autoClose: boolean;\n    keepAfterRouteChange: boolean;\n    fade: boolean;\n\n    constructor(init?:Partial<Alert>) {\n        Object.assign(this, init);\n    }\n}\n\nexport enum AlertType {\n    Success,\n    Error,\n    Info,\n    Warning\n}","export class Config {\n  config: string;\n}\n","export * from './alert';\nexport * from './user';\nexport * from './config';\n","export class User {\n    id: string;\n    password: string;\n    name: string;\n    token: string;\n    email: string;\n    role: string;\n    role_type: string\n    image: string\n}\n","import { Injectable } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {ConfigService} from '../app.init';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\nimport { Config } from '@app/_models';\nimport { ConstantsService } from '../common/services/constants.service';\n\n\n\n@Injectable({ providedIn: 'root' })\n\nexport class AccountService {\n    private userSubject: BehaviorSubject<User> = new BehaviorSubject(null);\n    user = this.userSubject.asObservable();\n    apiUrl: string;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        configService: ConfigService,\n        private constantService: ConstantsService\n    ) {\n      this.constantService.appUrl.subscribe(url => {\n            this.apiUrl = url\n            console.log('apiUrl', this.apiUrl);\n    });\n  }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    updatedDataSelection(user){\n      this.userSubject.next(user);\n  }\n\n    login(user: User) {\n        var data = {}\n        data[\"user\"] = user\n        return this.http.post<User>(`${this.apiUrl}/users/login`, data).pipe(map(userDetail => {\n          // this.userSubject.next(userDetail[\"user\"]);\n          this.updatedDataSelection(userDetail[\"user\"])\n          localStorage.setItem(\"authToken\", userDetail[\"token\"])\n        }));\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                // localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('authToken');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n      var data = {}\n      data[\"user\"] = user\n        return this.http.post(`${this.apiUrl}/users/register`, data);\n    }\n\n    getAll() {\n        return this.http.get<User[]>(`${this.apiUrl}/users/get_all_users`);\n    }\n\n    getById(id: string) {\n        return this.http.get<User>(`${this.apiUrl}/users/${id}/user_by_id`);\n    }\n\n    getUser(){\n        return this.http.get<User>(`${this.apiUrl}/users/get_user_profile`).pipe(map(userDetail => {\n          // this.userSubject.next(userDetail[\"user\"]);\n          this.updatedDataSelection(userDetail[\"user\"])\n        }));\n    }\n\n    update(id, params) {\n      var data = {}\n      data[\"user\"] = params\n        return this.http.put(`${this.apiUrl}/users/${id}/update_user_by_id`, data)\n            .pipe(map(user => {\n                return user;\n            }));\n    }\n\n    update_image(id,params){\n      return this.http.post(`${this.apiUrl}/users/${id}/update_image_by_id`, params)\n          .pipe(map(user => {\n              return user;\n          }));\n    }\n\n    delete(id: string) {\n        return this.http.get(`${this.apiUrl}/users/${id}/delete_user`)\n            .pipe(map(x => {\n                // auto logout if the logged in user deleted their own record\n                return x;\n            }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Alert, AlertType } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<Alert>();\n    private defaultId = 'default-alert';\n\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId): Observable<Alert> {\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n\n    // convenience methods\n    success(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Success, message }));\n    }\n\n    error(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Error, message }));\n    }\n\n    info(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Info, message }));\n    }\n\n    warn(message: string, options?: any) {\n        this.alert(new Alert({ ...options, type: AlertType.Warning, message }));\n    }\n\n    // main alert method    \n    alert(alert: Alert) {\n        alert.id = alert.id || this.defaultId;\n        this.subject.next(alert);\n    }\n\n    // clear alerts\n    clear(id = this.defaultId) {\n        this.subject.next(new Alert({ id }));\n    }\n}","export * from './account.service';\nexport * from './alert.service';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ \n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.less']\n })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'secret/home';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"header\">\n    <div class=\"header-title\">\n        <span>Admin Panel</span>\n    </div>\n</div>\n<div class=\"card\" style=\"width: 25%; margin: 0 auto; float: none\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\" ng-pattern=\"pattern\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Enter a valid email</div>\n              </div>\n          </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <!-- <a routerLink=\"../register\" class=\"btn btn-link\">Register</a> -->\n            </div>\n        </form>\n    </div>\n</div>\n<alert></alert>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ \n    templateUrl: 'register.component.html',\n    styleUrls: ['register.component.less']\n })\nexport class RegisterComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required,  Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6)]]\n        });\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        // var data = {}\n        // data[\"user\"] = this.form.value\n\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n                    // this.router.navigate(['../login'], { relativeTo: this.route });\n                    this.router.navigate(['../home']);\n                    localStorage.setItem('authToken', data[\"token\"])\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","<div class=\"header\">\n    <div class=\"header-title\">\n        <span>Admin Panel</span>\n    </div>\n</div>\n<div class=\"card\" style=\"width: 25%; margin: 0 auto; float: none\">\n    <h4 class=\"card-header\">Register</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"name\"> Name</label>\n                <input type=\"text\" formControlName=name class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n                <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.name.errors.required\"> Name is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Enter a valid email</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"../secret\" class=\"btn btn-link\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>\n<alert></alert>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { ListComponent } from './users/list.component'\nimport { AuthGuard } from './_helpers';\nimport {AccountService} from './_services'\n// import { UsersModule } from './users/users.module';\nimport { AddEditComponent } from './users/add-edit.component';\nimport { LoginComponent } from './account/login.component';\nimport { RegisterComponent } from './account/register.component';\nimport { LayoutComponent } from './users/layout.component';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\n\n// const accountModule = () => import('./account/account.module').then(x => x.AccountModule);\n// const usersModule = () => import('./users/users.module').then(x => x.UsersModule);\n\nconst routes: Routes = [\n    { path: 'secret', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    // { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n    // { path: 'users', loadChildren: usersModule, canActivate: [AuthGuard] },\n    // { path: 'account', loadChildren: accountModule },\n    { path: '', component: LayoutComponent, canActivate: [AuthGuard], children: [\n        { path: 'secret/home', component: HomeComponent, canActivate: [AuthGuard] },\n        { path: 'secret/users', component: ListComponent, canActivate: [AuthGuard] },\n        { path: 'secret/users/add', component: AddEditComponent, canActivate: [AuthGuard] },\n        { path: 'secret/users/edit/:id', component: AddEditComponent, canActivate: [AuthGuard] },\n        { path: '', redirectTo: 'secret/home', pathMatch: 'full' }\n    ] },\n    // { path: 'users', component: ListComponent, children: [\n    //     { path: 'add', component: AddEditComponent },\n    //     { path: 'edit/:id', component: AddEditComponent }\n    // ] },\n    // otherwise redirect to home\n    // { path: '', redirectTo: 'secret/home', pathMatch: 'full' },\n    { path: '**', component: PagenotfoundComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\n\nimport { AccountService } from './_services';\nimport { User } from './_models';\nimport {ConfigService} from './app.init';\nimport { ConstantsService } from './common/services/constants.service';\n\n\n@Component({ selector: 'app', templateUrl: 'app.component.html', styleUrls: ['app.component.less'] })\nexport class AppComponent {\n    user: User;\n    loggedIn: any;\n    toggledValue: any;\n\n\n    constructor(private accountService: AccountService, configService: ConfigService, private constantService: ConstantsService) {\n      this.constantService.setUrl(configService.config[\"apiUrl\"]);\n    }\n\n    ngOnInit() {\n    //   this.accountService.getUser().pipe(first()).subscribe(x => {\n    //   this.accountService.user.subscribe(x => {\n    //     if (x) {\n    //       this.loggedIn = true;\n    //     }\n    //     this.user = x\n    //    });\n    // })\n    }\n\n    // setToggle(value) {\n    //   console.log(value)\n    //   this.toggledValue = value;\n    //   console.log('toggled value : ', this.toggledValue)\n    // }\n\n    // checkLogging(value) {\n    //   if (value === 1) {\n    //     this.loggedIn = false;\n    //   }\n    // }\n\n    // logout() {\n    //     this.loggedIn = false;\n    //     console.log('logged in : ', this.loggedIn)\n    //     this.accountService.logout();\n    // }\n}\n","<!-- nav -->\n<!-- <nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"user\">\n    <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">Home</a>\n        <a class=\"nav-item nav-link\" routerLink=\"/users\" routerLinkActive=\"active\">Users</a>\n        <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n    </div>\n</nav> -->\n\n<!-- main app container -->\n<!-- ========================================\n<app-header \n    *ngIf=\"loggedIn\" \n    (toggleSideNav)=\"setToggle($event)\"\n    (logged)=\"checkLogging($event)\"\n></app-header>\n======================================== -->\n<!-- <div class=\"row\">\n    <div class=\"col\">\n        <div>\n            <app-side-nav-bar *ngIf=\"loggedIn\"></app-side-nav-bar>\n        </div>\n        <div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\">\n            <router-outlet></router-outlet>\n            <alert></alert>\n        </div>\n    </div>\n</div> -->\n<!-- ========================================\n<div>\n    ======================================== -->\n    <!-- <div>\n        <app-side-nav-bar\n         *ngIf=\"loggedIn\"\n         [ngClass]=\"{'side-bar-collapsed': !toggledValue,\n                'side-bar-opened': toggledValue}\"\n    >\n        </app-side-nav-bar>\n    </div> -->\n    <!-- ========================================\n    <div class=\"app-container\" [ngClass]=\"{ 'bg-light': user }\" *ngIf=\"!loggedIn\">\n        <router-outlet></router-outlet>\n        <alert></alert>\n    </div>\n\n    <mat-drawer-container\n        *ngIf=\"loggedIn\"\n        class=\"drawer-container\"\n    >\n        <mat-drawer \n            mode=\"side\" \n            opened\n            [ngClass]=\"{'side-bar-collapsed': !toggledValue,\n                'side-bar-opened': toggledValue}\"\n        >\n            <span class=\"span-text\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                Home \n            </span>\n            <span class=\"span-text\" routerLink=\"/users\" routerLinkActive=\"active\">\n                <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\n                Users\n            </span>\n        </mat-drawer>\n        <mat-drawer-content> \n            <router-outlet></router-outlet>\n            <alert></alert>\n        </mat-drawer-content>\n    </mat-drawer-container>\n</div>\n<div class=\"footer\" *ngIf=\"loggedIn\">\n    <app-footer></app-footer>\n</div>\n======================================== -->\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Config } from './_models';\n// import {AppModule} from './app.module';\n\n\n\n@Injectable({\n      providedIn: 'root'\n    })\n    export class ConfigService {\n      config: Config;\n\n      constructor(private http: HttpClient) {}\n\n      loadConfig() {\n        return this.http\n          .get<Config>('./assets/config.json')\n          .toPromise()\n          .then(config => {\n            this.config = config;\n          });\n      }\n    }\n","import { NgModule, APP_INITIALIZER} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ConfigService } from './app.init';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { AlertComponent } from './_components';\nimport { HomeComponent } from './home';\nimport { LayoutComponent } from './users/layout.component';\nimport { ListComponent } from './users/list.component';\nimport { AddEditComponent } from './users/add-edit.component';\nimport { RegisterComponent } from './account/register.component';\nimport { LoginComponent } from './account/login.component';\nimport { AccountService } from './_services';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FormsModule } from '@angular/forms';\nimport { ConstantsService } from './common/services/constants.service';\nimport { SideNavBarComponent } from './side-nav-bar/side-nav-bar.component';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HeaderComponent } from './header/header.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CommonModule } from '@angular/common';\nimport { PagenotfoundComponent } from './pagenotfound/pagenotfound.component';\nexport const configFactory = (configService: ConfigService) => {\n     return () => configService.loadConfig();\n   };\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatSidenavModule,\n        MatMenuModule,\n        MatIconModule,\n        MatButtonModule,\n        CommonModule,\n        BrowserAnimationsModule],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        HomeComponent,\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent,\n        RegisterComponent,\n        LoginComponent,\n        SideNavBarComponent ,\n        FooterComponent ,\n        HeaderComponent ,\n        PagenotfoundComponent ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n        {\n           provide: APP_INITIALIZER,\n           useFactory: configFactory,\n           deps: [ConfigService],\n           multi: true\n       },\n       ConstantsService\n\n        // provider used to create fake backend\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { };\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConstantsService {\n  private baseAppUrl: BehaviorSubject<string> = new BehaviorSubject('');\n  public appUrl = this.baseAppUrl.asObservable();\n\n\n   public setUrl(value: string) {\n          this.baseAppUrl.next(value);\n      }\n }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.less']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span>Softprodigy</span>","import { Component, OnInit, Output } from '@angular/core';\nimport { Input, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.less']\n})\nexport class HeaderComponent implements OnInit {\n  toggledState: boolean;\n\n  @Output() toggleSideNav:any = new EventEmitter();\n  @Output() logged:any = new EventEmitter();\n  constructor(private accountService: AccountService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  toggle() {\n    this.toggledState = !this.toggledState\n    this.toggleSideNav.emit(this.toggledState);\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigate(['/secret'])\n    this.logged.emit(1);\n  }\n\n}\n","<div class=\"header\">\n    <div class=\"header-title\">\n        <span>Admin Panel</span><i class=\"fa fa-bars\" style=\"margin-left: 5px; color: white; cursor: pointer;\" aria-hidden=\"true\" (click)=\"toggle()\"></i>\n    </div>\n    <!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button> -->\n    <div>\n        <mat-icon [matMenuTriggerFor]=\"menu\" style=\"cursor:pointer; color: white;\">account_circle</mat-icon>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"logout()\">\n            <i class=\"fa fa-chain-broken\" aria-hidden=\"true\"></i>\n            <span>Logout</span>\n        </button>\n      </mat-menu>\n    </div>\n</div>","import { first } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\nimport { User } from '@app/_models';\nimport { AccountService , AlertService} from '@app/_services';\n\n@Component({\n selector: 'basic-table',\n templateUrl: 'home.component.html'\n })\n\nexport class HomeComponent {\n    user: User\n    constructor(private accountService: AccountService) {\n        this.accountService.getUser().pipe(first()).subscribe(x => {\n        this.accountService.user.subscribe(x => {\n            this.user = x\n        });\n        })\n    }\n\n    logout() {\n        this.accountService.logout()\n\n    }\n\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{user?.name}}!</h1>\n        <p>You're logged</p>\n        <p><a routerLink=\"/secret/users\">Users List</a></p>\n    </div>\n</div>","export * from './home.component';","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pagenotfound',\n  templateUrl: './pagenotfound.component.html',\n  styleUrls: ['./pagenotfound.component.less']\n})\nexport class PagenotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n    <div class=\"header-title\">\n        <span>Admin Panel</span>\n    </div>\n</div>\n<h1 class=\"container\">Page Not Found</h1>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-nav-bar',\n  templateUrl: './side-nav-bar.component.html',\n  styleUrls: ['./side-nav-bar.component.less']\n})\nexport class SideNavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormsModule } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\nexport interface Role {\n  userRole: string;\n  text: string;\n}\n\n\n@Component({ \n  templateUrl: 'add-edit.component.html',\n  styleUrls: ['add-edit.component.less']\n })\n\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n    mySelect = \"0\";\n    imageSrc: string;\n    image: File;\n    adminMode: boolean;\n    added_image: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {\n    }\n\n    ngOnInit() {\n      this.adminMode = false;\n      this.id = this.route.snapshot.params['id'];\n      if (this.id == \"admin_id\"){\n        this.accountService.user.subscribe(x => {\n        this.id = x.id;\n        this.adminMode = true;\n      });\n      }\n        this.isAddMode = !this.id;\n        // this.isAddMode = !this.id;\n\n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required,  Validators.email]],\n            password: ['', passwordValidators],\n            role: [this.mySelect],\n            file: '',\n            fileSource: '',\n            image: \"\",\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                  x = x[\"user\"]\n                    this.f.name.setValue(x.name);\n                    this.f.email.setValue(x.email);\n                    this.f.role.setValue(x.role);\n                    this.mySelect = x.role;\n                    this.added_image = x.image;\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onChange(value){\n      this.f.role.setValue(value)\n    }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateUser() {\n      if (this.image != undefined){\n        const uploadData = new FormData();\n        uploadData.append('image', this.image, this.image.name);\n        this.accountService.update_image(this.id, uploadData)\n          .pipe(first())\n          .subscribe(\n              data => {\n                this.check_password_field(this.form.value)\n                this.accountService.update(this.id, this.form.value)\n                    .pipe(first())\n                    .subscribe(\n                        data => {\n                            this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                            this.router.navigate(['..', { relativeTo: this.route }]);\n                        },\n                        error => {\n                            this.alertService.error(error);\n                            this.loading = false;\n                        });\n              },\n              error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              });\n        }\n        else{\n          this.check_password_field(this.form.value)\n          this.accountService.update(this.id, this.form.value)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                      this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                      this.router.navigate(['..', { relativeTo: this.route }]);\n                  },\n                  error => {\n                      this.alertService.error(error);\n                      this.loading = false;\n                  });\n        }\n    }\n      roles: Role[] = [{userRole: \"0\", text: 'Customer'}, {userRole: \"1\", text: 'Staff'}];\n\n      check_password_field(values){\n        if (values[\"password\"] == \"\"){\n          delete values[\"password\"];\n        }\n      }\n\n    onFileChange(event) {\n    const reader = new FileReader();\n\n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n\n        this.imageSrc = reader.result as string;\n        this.image = event.target.files[0]\n\n      };\n\n    }\n  }\n}\n","<div class=\"container add-edit-box\">\n  <h1 *ngIf=\"isAddMode\" class=\"add-edit-box-title\">Add User</h1>\n  <h1 *ngIf=\"!isAddMode\" class=\"add-edit-box-title\">Edit User</h1>\n  <form class=\"add-edit-box-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-row\">\n          <div class=\"form-group col\">\n            <label for=\"name\"> Name</label>\n              <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n              <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.name.errors.required\">Name is required</div>\n              </div>\n          </div>\n          <div class=\"form-group col\">\n                <label for=\"email\">Email</label>\n              <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\" ng-pattern=\"pattern\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Enter a valid email</div>\n              </div>\n          </div>\n      </div>\n        <div class=\"form-row\">\n              <div class=\"form-group col\">\n                  <label for=\"password\">\n                      Password\n                  </label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                  <div *ngIf=\"!isAddMode\">(Leave Blank for same password)</div>\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                      <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                  </div>\n              </div>\n            <div class=\"form-group col-sm-3\">\n              <div *ngIf=\"!adminMode\">\n                <label for=\"role\">\n                    Select Role\n                </label>\n              <select name=\"my-select\" [(ngModel)]=\"mySelect\" [ngModelOptions]=\"{standalone: true}\" id=\"role\" (change)=\"onChange($event.target.value)\">\n                <option [value]=\"role.userRole\" *ngFor=\"let role of roles\">\n                    {{role.text}}\n                </option>\n              </select>\n              <input type=\"hidden\" formControlName=\"role\" value={{mySelect}}>\n            </div>\n          </div>\n        <div *ngIf=\"!isAddMode\" class=\"change_image\">\n            <div class=\"form-group\">\n            <input\n                formControlName=\"image\"\n                id=\"file\"\n                type=\"file\"\n                class=\"form-control\"\n                (change)=\"onFileChange($event)\">\n                <div *ngIf=\"f.file.touched && f.file.invalid\" class=\"alert alert-danger\">\n                  <div *ngIf=\"f.file.errors.required\">File is required.</div>\n                </div>\n            </div>\n          </div>\n        </div>\n      <div class=\"form-group row\">\n        <div class=\"form-group col image_preview\">\n          <label for=\"savedImage\" *ngIf=\"added_image\"> Saved Image: </label>\n          <img [src]=\"added_image\" *ngIf=\"added_image\" style=\"height: 200px; width:300px; padding: 10px; background-color: brown;\" class=\"image_style\">\n          </div>\n        <div class=\"form-group col image_preview\">\n          <label for=\"selectedImage\" *ngIf=\"imageSrc\"> Selected Image: </label>\n          <img [src]=\"imageSrc\" *ngIf=\"imageSrc\" style=\"height: 200px; width:300px\" class=\"image_style\">\n        </div>\n      </div>\n      <div class=\"form-group\">\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Save\n          </button>\n          <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n      </div>\n  </form>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({ \n    templateUrl: 'layout.component.html',\n    styleUrls: ['layout.component.less']\n})\nexport class LayoutComponent { \n    toggledValue: any;\n\n    setToggle(value) {\n        this.toggledValue = value;\n    }\n}\n","<!-- <div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div> -->\n<!-- <h1>Layout Component</h1> -->\n<div>\n    <app-header (toggleSideNav)=\"setToggle($event)\"></app-header>\n    <mat-drawer-container\n        class=\"drawer-container\"\n    >\n        <mat-drawer \n            mode=\"side\" \n            opened\n            [ngClass]=\"{'side-bar-collapsed': !toggledValue,\n                'side-bar-opened': toggledValue}\"   \n        >\n            <span class=\"span-text\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\n                <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                Home \n            </span>\n            <span class=\"span-text\" routerLink=\"/secret/users\" routerLinkActive=\"active\">\n                <i class=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\n                Users\n            </span>\n        </mat-drawer>\n        <mat-drawer-content class=\"scroll\"> \n            <router-outlet></router-outlet>\n            <alert></alert>\n        </mat-drawer-content>\n    </mat-drawer-container>\n    <app-footer class=\"footer\"></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    users = null;\n    loading = false;\n    image = null\n    admin_id = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users[\"users\"]);\n    }\n\n    deleteUser(id: string) {\n        const user = this.users.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.delete(id)\n            .pipe(first())\n            .subscribe(() => {\n\n\n                this.users = this.users.filter(x => x.id !== id)\n            });\n    }\n    logout() {\n        this.accountService.logout()\n\n    }\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n      <div class=\"container\">\n        <h1> List of users </h1>\n          <a routerLink=\"add\" class=\"btn btn-sm btn-success create_user\">Create user</a>\n          <a routerLink=\"edit/admin_id\" class=\"btn btn-sm btn-primary edit_profile\">Edit Profile</a>\n      </div>\n      <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Role Type</th>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Edit</th>\n      <th scope=\"col\">Delete</th>\n    </tr>\n  </thead>\n  <tbody *ngFor=\"let user of users\">\n    <tr>\n      <th scope=\"row\">{{user.id}}</th>\n      <td>{{user.name}}</td>\n      <td>{{user.email}}</td>\n      <td>{{user.role_type}}</td>\n      <td><img [src]=\"user.image\" *ngIf=\"user.image; else elseBlock\" style=\"height: 50px; width:50px\"></td>\n      <ng-template #elseBlock><td>No Image</td></ng-template>\n      <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary edit_user\">Edit</a>\n      <td><button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n        <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n        <span *ngIf=\"!user.isDeleting\">Delete</span></button></td>\n    </tr>\n    <tr *ngIf=\"!users\">\n        <td colspan=\"4\" class=\"text-center\">\n            <span class=\"spinner-border spinner-border-lg align-center\"></span>\n        </td>\n    </tr>\n  </tbody>\n</table>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'http://localhost:3000/api/v1'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"]}