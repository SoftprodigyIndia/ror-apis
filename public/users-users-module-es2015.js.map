{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormsModule } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\nexport interface Role {\n  userRole: string;\n  text: string;\n}\n\n\n@Component({ templateUrl: 'add-edit.component.html' })\n\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n    mySelect = \"0\";\n    imageSrc: string;\n    image: File;\n    adminMode: boolean;\n    added_image: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {\n    }\n\n    ngOnInit() {\n      this.adminMode = false;\n      this.id = this.route.snapshot.params['id'];\n      if (this.id == \"admin_id\"){\n        this.accountService.user.subscribe(x => {\n        this.id = x.id;\n        this.adminMode = true;\n      });\n      }\n        this.isAddMode = !this.id;\n        // this.isAddMode = !this.id;\n\n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            name: ['', Validators.required],\n            email: ['', [Validators.required,  Validators.email]],\n            password: ['', passwordValidators],\n            role: [this.mySelect],\n            file: '',\n            fileSource: '',\n            image: \"\",\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => {\n                  x = x[\"user\"]\n                    this.f.name.setValue(x.name);\n                    this.f.email.setValue(x.email);\n                    this.f.role.setValue(x.role);\n                    this.mySelect = x.role;\n                    this.added_image = x.image;\n                });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onChange(value){\n      this.f.role.setValue(value)\n    }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['.', { relativeTo: this.route }]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n\n    private updateUser() {\n      if (this.image != undefined){\n        const uploadData = new FormData();\n        uploadData.append('image', this.image, this.image.name);\n        this.accountService.update_image(this.id, uploadData)\n          .pipe(first())\n          .subscribe(\n              data => {\n                this.check_password_field(this.form.value)\n                this.accountService.update(this.id, this.form.value)\n                    .pipe(first())\n                    .subscribe(\n                        data => {\n                            this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                            this.router.navigate(['..', { relativeTo: this.route }]);\n                        },\n                        error => {\n                            this.alertService.error(error);\n                            this.loading = false;\n                        });\n              },\n              error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n              });\n        }\n        else{\n          this.check_password_field(this.form.value)\n          this.accountService.update(this.id, this.form.value)\n              .pipe(first())\n              .subscribe(\n                  data => {\n                      this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                      this.router.navigate(['..', { relativeTo: this.route }]);\n                  },\n                  error => {\n                      this.alertService.error(error);\n                      this.loading = false;\n                  });\n        }\n    }\n      roles: Role[] = [{userRole: \"0\", text: 'Customer'}, {userRole: \"1\", text: 'Staff'}];\n\n      check_password_field(values){\n        if (values[\"password\"] == \"\"){\n          delete values[\"password\"];\n        }\n      }\n\n    onFileChange(event) {\n    const reader = new FileReader();\n\n    if(event.target.files && event.target.files.length) {\n      const [file] = event.target.files;\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n\n        this.imageSrc = reader.result as string;\n        this.image = event.target.files[0]\n\n      };\n\n    }\n  }\n}\n","<h1 *ngIf=\"isAddMode\">Add User</h1>\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n          <label for=\"name\"> Name</label>\n            <input type=\"text\" formControlName=\"name\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.name.errors }\" />\n            <div *ngIf=\"submitted && f.name.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.name.errors.required\">Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n              <label for=\"email\">Email</label>\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\" ng-pattern=\"pattern\">\n                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                <div *ngIf=\"f.email.errors.email\">Enter a valid email</div>\n            </div>\n        </div>\n    </div>\n      <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label for=\"password\">\n                    Password\n                </label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"!isAddMode\">(Leave Blank for same password)</div>\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                    <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                </div>\n            </div>\n          <div class=\"form-group col-sm-3\">\n            <div *ngIf=\"!adminMode\">\n              <label for=\"role\">\n                  Select Role\n              </label>\n            <select name=\"my-select\" [(ngModel)]=\"mySelect\" [ngModelOptions]=\"{standalone: true}\" id=\"role\" (change)=\"onChange($event.target.value)\">\n              <option [value]=\"role.userRole\" *ngFor=\"let role of roles\">\n                  {{role.text}}\n              </option>\n            </select>\n            <input type=\"hidden\" formControlName=\"role\" value={{mySelect}}>\n          </div>\n        </div>\n      <div *ngIf=\"!isAddMode\" class=\"change_image\">\n          <div class=\"form-group\">\n          <input\n              formControlName=\"image\"\n              id=\"file\"\n              type=\"file\"\n              class=\"form-control\"\n              (change)=\"onFileChange($event)\">\n              <div *ngIf=\"f.file.touched && f.file.invalid\" class=\"alert alert-danger\">\n                <div *ngIf=\"f.file.errors.required\">File is required.</div>\n              </div>\n          </div>\n        </div>\n      </div>\n    <div class=\"form-group row\">\n      <div class=\"form-group col image_preview\">\n        <label for=\"savedImage\" *ngIf=\"added_image\"> Saved Image: </label>\n        <img [src]=\"added_image\" *ngIf=\"added_image\" style=\"height: 200px; width:300px\" class=\"image_style\">\n        </div>\n      <div class=\"form-group col image_preview\">\n        <label for=\"selectedImage\" *ngIf=\"imageSrc\"> Selected Image: </label>\n        <img [src]=\"imageSrc\" *ngIf=\"imageSrc\" style=\"height: 200px; width:300px\" class=\"image_style\">\n      </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }\n","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '@app/_services';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    users = null;\n    loading = false;\n    image = null\n    admin_id = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users[\"users\"]);\n    }\n\n    deleteUser(id: string) {\n        const user = this.users.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.delete(id)\n            .pipe(first())\n            .subscribe(() => {\n\n\n                this.users = this.users.filter(x => x.id !== id)\n            });\n    }\n    logout() {\n        this.accountService.logout()\n\n    }\n}\n","<div class=\"p-4\">\n    <div class=\"container\">\n      <div class=\"container\">\n        <h1> List of users </h1>\n          <a routerLink=\"add\" class=\"btn btn-sm btn-success create_user\">Create user</a>\n          <a routerLink=\"edit/admin_id\" class=\"btn btn-sm btn-primary edit_profile\">Edit Profile</a>\n      </div>\n      <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">#ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Role Type</th>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Edit</th>\n      <th scope=\"col\">Delete</th>\n    </tr>\n  </thead>\n  <tbody *ngFor=\"let user of users\">\n    <tr>\n      <th scope=\"row\">{{user.id}}</th>\n      <td>{{user.name}}</td>\n      <td>{{user.email}}</td>\n      <td>{{user.role_type}}</td>\n      <td><img [src]=\"user.image\" *ngIf=\"user.image; else elseBlock\" style=\"height: 50px; width:50px\"></td>\n      <ng-template #elseBlock><td>No Image</td></ng-template>\n      <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary edit_user\">Edit</a>\n      <td><button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n        <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n        <span *ngIf=\"!user.isDeleting\">Delete</span></button></td>\n    </tr>\n    <tr *ngIf=\"!users\">\n        <td colspan=\"4\" class=\"text-center\">\n            <span class=\"spinner-border spinner-border-lg align-center\"></span>\n        </td>\n    </tr>\n  </tbody>\n</table>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UsersRoutingModule,\n        FormsModule\n    ],\n    declarations: [\n        LayoutComponent,\n        ListComponent,\n        AddEditComponent\n    ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}